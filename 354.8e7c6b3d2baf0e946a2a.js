(()=>{"use strict";"undefined"!=typeof window&&window.innerHeight,Math.round(425),new Set(["newMessage","newScheduledMessage","deleteMessages","deleteScheduledMessages","deleteHistory"]);const e=new Set(["image/png","image/gif","image/jpeg"]),r=new Set(["video/mp4"]);new Set([...e,...r]),new Set(["AU","BD","CA","CO","EG","HN","IE","IN","JO","MX","MY","NI","NZ","PH","PK","SA","SV","US"]),self.onerror=e=>{console.error(e),n({type:"unhandledError",error:{message:e.error.message||"Uncaught exception in worker"}})},self.addEventListener("unhandledrejection",(e=>{console.error(e),n({type:"unhandledError",error:{message:e.reason.message||"Uncaught rejection in worker"}})}));const t=new Map;function n(e,r){r?postMessage(e,r):postMessage(e)}let a;self.importScripts("rlottie-wasm.js");const s=new Promise((e=>{Module.onRuntimeInitialized=()=>{a={init:Module.cwrap("lottie_init","",[]),destroy:Module.cwrap("lottie_destroy","",["number"]),resize:Module.cwrap("lottie_resize","",["number","number","number"]),buffer:Module.cwrap("lottie_buffer","number",["number"]),render:Module.cwrap("lottie_render","",["number","number"]),loadFromData:Module.cwrap("lottie_load_from_data","number",["number","number"])},e()}})),o=new Map;var i;i={init:async function(e,r,t,n,i,c){a||await s;const d=JSON.stringify(r),l=allocate(intArrayFromString(d),"i8",0),m=a.init(),u=a.loadFromData(m,l);a.resize(m,t,t),o.set(e,{imgSize:t,reduceFactor:i,handle:m}),c(Math.ceil(u/i))},changeData:async function(e,r,t){a||await s;const n=JSON.stringify(r),{reduceFactor:i,handle:c}=o.get(e),d=allocate(intArrayFromString(n),"i8",0),l=a.loadFromData(c,d);t(Math.ceil(l/i))},renderFrames:async function(e,r,t,n){a||await s;const{imgSize:i,reduceFactor:c,handle:d}=o.get(e);for(let e=r;e<=t;e++){const r=e*c;a.render(d,r);const t=a.buffer(d),s=Module.HEAPU8.subarray(t,t+i*i*4);n(e,new Uint8ClampedArray(s).buffer)}},destroy:function(e){const r=o.get(e);a.destroy(r.handle),o.delete(e)}},onmessage=async e=>{const{data:r}=e;switch(r.type){case"callMethod":{const{messageId:e,name:a,args:s}=r;try{if(e){const r=(...r)=>{const t=r[r.length-1];n({type:"methodCallback",messageId:e,callbackArgs:r},t instanceof ArrayBuffer?[t]:void 0)};t.set(e,r),s.push(r)}const[r,o]=await i[a](...s)||[];e&&n({type:"methodResponse",messageId:e,response:r},o)}catch(r){console.error(r),e&&n({type:"methodResponse",messageId:e,error:{message:r.message}})}e&&t.delete(e);break}case"cancelProgress":{const e=t.get(r.messageId);e&&(e.isCanceled=!0);break}}}})();
//# sourceMappingURL=354.8e7c6b3d2baf0e946a2a.js.map